{"version":3,"sources":["components/Navigation/Sidebar.module.scss","components/Navigation/MenuToggle.module.scss","pages/Login/Login.module.scss","components/UI/Button/Button.module.scss","components/UI/Input/Input.module.scss","components/UI/Backdrop.module.scss","components/UI/Backdrop.js","components/Navigation/Sidebar.js","pages/Buyers.js","pages/Terminals.js","components/UI/Button/Button.js","components/UI/Input/Input.js","pages/Login/Login.js","components/Navigation/MenuToggle.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Backdrop","props","className","classes","onClick","Sidebar","cls","this","isOpen","push","close","Fragment","join","header","src","alt","exact","to","footer","onClose","Component","Buyers","Terminals","Button","type","disabled","children","isInvalid","valid","touched","shouldValidate","Input","inputType","htmlFor","Math","random","invalid","label","id","value","onChange","errorMessage","Login","state","isFormValid","formControls","login","validation","required","password","minLength","loginHandler","submitHandler","event","preventDefault","onChangeHandler","e","controlName","control","target","validateControl","Object","keys","forEach","name","setState","isValid","trim","length","map","index","key","onSubmit","LoginForm","renderInputs","Btn","MenuToggle","cross","open","burger","onToggle","App","menu","isLogin","toggleMenuHandler","menuCloseHandler","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6386754f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Sidebar\":\"Sidebar_Sidebar__1kSSr\",\"close\":\"Sidebar_close__3f3Df\",\"overlay\":\"Sidebar_overlay__3y1M6\",\"active\":\"Sidebar_active__2wQ-K\",\"dismiss\":\"Sidebar_dismiss__Sg6mU\",\"header\":\"Sidebar_header__6egVG\",\"sidebar\":\"Sidebar_sidebar__1ndGB\",\"footer\":\"Sidebar_footer__123J1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__35zWV\",\"open\":\"MenuToggle_open__3gd51\",\"cross\":\"MenuToggle_cross__3Bzog\",\"burger\":\"MenuToggle_burger__2B-HL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__2rkDV\",\"LoginForm\":\"Login_LoginForm__1bXz2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2Ajf-\",\"error\":\"Button_error__A4xET\",\"success\":\"Button_success__qdwm8\",\"primary\":\"Button_primary__CVuDV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__SNRl4\",\"invalid\":\"Input_invalid__1ZOur\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__33Bh5\"};","import React from 'react';\r\nimport classes from './Backdrop.module.scss';\r\n\r\nconst Backdrop = (props) => (\r\n  <div className={classes.Backdrop} onClick={props.onClick}></div>\r\n);\r\n\r\nexport default Backdrop;\r\n","import React, { Component } from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport classes from './Sidebar.module.scss';\r\nimport Backdrop from '../UI/Backdrop';\r\n\r\nclass Sidebar extends Component {\r\n  render() {\r\n    const cls = [classes.Sidebar];\r\n\r\n    if (!this.props.isOpen) {\r\n      cls.push(classes.close);\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <nav className={cls.join(' ')}>\r\n          <div className={classes.header}>\r\n            <div className=\"avatar\">\r\n              <img src={''} alt=\"avatar\"></img>\r\n            </div>\r\n            <p>Dummy Heading</p>\r\n          </div>\r\n          <ul className=\"sidebar-nav list-unstyled components\">\r\n            <li className=\"nav-item\">\r\n              <Link exact to=\"/terminals\" className=\"nav-link\">\r\n                Терминалы\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink to=\"/buyers\" className=\"nav-link\">\r\n                Покупатели\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n          <div className={classes.footer}>Copyright © 2020 </div>\r\n        </nav>\r\n\r\n        {this.props.isOpen ? <Backdrop onClick={this.props.onClose} /> : null}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\n\r\nexport const Buyers = () => (\r\n  <div>\r\n    <h1>Buyers</h1>\r\n  </div>\r\n);\r\n","import React from 'react';\r\n\r\nexport const Terminals = () => (\r\n  <div>\r\n    <h1>Terminals</h1>\r\n  </div>\r\n);\r\n","import React from 'react'\r\nimport classes from './Button.module.scss'\r\n\r\nconst Button = props => {\r\n  const cls = [\r\n    classes.Button,\r\n    classes[props.type]\r\n  ]\r\n\r\n  return (\r\n    <button\r\n      onClick={props.onClick}\r\n      className={cls.join(' ')}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport classes from './Input.module.scss'\r\n\r\nfunction isInvalid({valid, touched, shouldValidate}) {\r\n  return !valid && shouldValidate && touched\r\n}\r\n\r\nconst Input = props => {\r\n  const inputType = props.type || 'text'\r\n  const cls = [classes.Input]\r\n  const htmlFor = `${inputType}-${Math.random()}`\r\n\r\n  if (isInvalid(props)) {\r\n    cls.push(classes.invalid)\r\n  }\r\n\r\n  return (\r\n    <div className={cls.join(' ')}>\r\n      <label htmlFor={htmlFor}>{props.label}</label>\r\n      <input\r\n        type={inputType}\r\n        id={htmlFor}\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n      />\r\n\r\n      {\r\n        isInvalid(props)\r\n          ? <span>{props.errorMessage || 'Введите верное значение'}</span>\r\n          : null\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input","import React, { Component, useContext } from 'react';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport classes from './Login.module.scss';\r\n\r\nexport default class Login extends Component {\r\n  state = {\r\n    isFormValid: false,\r\n    formControls: {\r\n      login: {\r\n        value: '',\r\n        type: 'text',\r\n        label: 'Login',\r\n        errorMessage: 'Логин не зарегистрирован',\r\n        valid: false,\r\n        touched: false,\r\n        validation: {\r\n          required: true,\r\n          login: true,\r\n        },\r\n      },\r\n      password: {\r\n        value: '',\r\n        type: 'password',\r\n        label: 'Password',\r\n        errorMessage: 'Пароль должен быть не менее 8 символов',\r\n        valid: false,\r\n        touched: false,\r\n        validation: {\r\n          required: true,\r\n          minLength: 8,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  loginHandler = () => {};\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  validateControl(value, validation) {\r\n    if (!validation) {\r\n      return true;\r\n    }\r\n\r\n    let isValid = true;\r\n\r\n    if (validation.required) {\r\n      isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    if (validation.login) {\r\n    }\r\n\r\n    if (validation.minLength) {\r\n      isValid = value.length >= validation.minLength && isValid;\r\n    }\r\n\r\n    return isValid;\r\n  }\r\n\r\n  onChangeHandler = (e, controlName) => {\r\n    const formControls = { ...this.state.formControls };\r\n    const control = { ...formControls[controlName] };\r\n\r\n    control.value = e.target.value;\r\n    control.touched = true;\r\n    control.valid = this.validateControl(control.value, control.validation);\r\n\r\n    formControls[controlName] = control;\r\n\r\n    let isFormValid = true;\r\n\r\n    Object.keys(formControls).forEach((name) => {\r\n      isFormValid = formControls[name].valid && isFormValid;\r\n    });\r\n\r\n    this.setState({\r\n      formControls,\r\n      isFormValid,\r\n    });\r\n  };\r\n\r\n  renderInputs() {\r\n    return Object.keys(this.state.formControls).map((controlName, index) => {\r\n      const control = this.state.formControls[controlName];\r\n      return (\r\n        <Input\r\n          key={controlName + index}\r\n          type={control.type}\r\n          value={control.value}\r\n          valid={control.valid}\r\n          touched={control.touched}\r\n          label={control.label}\r\n          shouldValidate={!!control.validation}\r\n          errorMessage={control.errorMessage}\r\n          onChange={(e) => this.onChangeHandler(e, controlName)}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.Login}>\r\n        <div>\r\n          <h1>Вход</h1>\r\n          <form onSubmit={this.submitHandler} className={classes.LoginForm}>\r\n            {this.renderInputs()}\r\n            <Button\r\n              type=\"success\"\r\n              onClick={this.props.onClick}\r\n              disabled={!this.state.isFormValid}\r\n              className={classes.Btn}\r\n            >\r\n              Войти\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport classes from './MenuToggle.module.scss';\r\n\r\nconst MenuToggle = props => {\r\n\r\n  const cls = [\r\n    classes.MenuToggle\r\n  ]\r\n\r\n  if (props.isOpen) {\r\n    cls.push(classes.cross)\r\n    cls.push(classes.open)\r\n  } else {\r\n    cls.push(classes.burger)\r\n  }\r\n\r\n  return (\r\n    <i \r\n      className={cls.join(' ')}\r\n      onClick={props.onToggle}\r\n    />\r\n  )\r\n}\r\n\r\nexport default MenuToggle \r\n","import React, { Component, useContext } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Sidebar from './components/Navigation/Sidebar';\nimport { Buyers } from './pages/Buyers';\nimport { Terminals } from './pages/Terminals';\nimport Login from './pages/Login/Login';\nimport MenuToggle from './components/Navigation/MenuToggle';\n\nclass App extends Component {\n  state = {\n    menu: false,\n    isLogin: false\n  };\n\n  toggleMenuHandler = () => {\n    this.setState({\n      menu: !this.state.menu,\n    });\n  };\n\n  menuCloseHandler = () => {\n    this.setState({\n      menu: false\n    })\n  }\n\n  loginHandler = () => {\n    this.setState({\n      isLogin: true\n    })\n  }\n\n  render() {\n\n    return (\n      <BrowserRouter>\n        {!this.state.isLogin ? <Login onClick={this.loginHandler}/> : null}\n        \n        <MenuToggle\n          onToggle={this.toggleMenuHandler}\n          isOpen={this.state.menu}\n        />\n        <Sidebar isOpen={this.state.menu} onClose={this.menuCloseHandler} />\n        <Switch>\n          <Route exact path=\"/terminals\" component={Terminals} />\n          <Route path=\"/buyers\" component={Buyers} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}